{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 _var openBuildings = ee.FeatureCollection('GOOGLE/Research/open-buildings/v3/polygons');\
var shapefile = table; // Replace 'table' with the correct variable name of your imported shapefile\
var buildingsInShapefile = openBuildings.filterBounds(shapefile);\
var buildingsWithCoords = buildingsInShapefile.map(function(feature) \{\
  var centroid = feature.geometry().centroid();\
  var coords = centroid.coordinates();\
  return feature.set(\{\
    longitude: coords.get(0),\
    latitude: coords.get(1)\
  \});\
\});\
Export.table.toDrive(\{\
  collection: buildingsWithCoords,\
  description: 'OpenBuildings_Extract', // Change name as needed\
  fileFormat: 'CSV',  // Export as CSV for easy use\
  selectors: ['longitude', 'latitude', 'confidence'] // Select relevant properties (modify as needed)\
\});\
print('Filtered Open Buildings:', buildingsInShapefile);_\
}